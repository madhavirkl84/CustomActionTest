# Request for review when there are blockers 

name: Check for Blockers

on:
  pull_request:
    branches: [ "main" ]
  
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: write-all        
    steps:
      - uses: actions/checkout@v3
      
      - name: buildImages
        run: |
          echo "Images build"            
  checkBlockers:
    needs: [build]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: write-all    
    outputs:
      continueWorkFlow: ${{ steps.request.outputs.continueWorkFlow }} # Job output to check the status
      blockerDetails: ${{ steps.request.outputs.blockerDetails }}     # Job output for getting blocker details 
    steps:
      - uses: actions/checkout@v3
      - name: Check Blocker API Call
        id: request
        uses: ./../actions/checkBlockers
#      - name: Map the output to Job variables
#        id: requestOutput
#        run: |          
#            echo "continueWorkFlow=noGo" >> $GITHUB_OUTPUT
#            echo "${{needs.checkBlockers.outputs.continueWorkFlow}}"
  DeployIntPreCheck:
    name: Deployment Pre Check
    needs: [checkBlockers]
    if: needs.checkBlockers.outputs.continueWorkFlow == 'noGo'
    runs-on: ubuntu-latest
    environment: 
      name: PreDeployCheck
    steps:
      - name: PreCheck
        run: echo Pre check failed, please review to contiue the deploymnet for following blockers 
  DeployToInt:
    name: Int Deployment 
    if: always() && (needs.DeployIntPreCheck.result == 'success' || needs.DeployIntPreCheck.result == 'skipped')
    needs: [DeployIntPreCheck]
    runs-on: ubuntu-latest
    environment: 
      name: Int
    steps:
      - name: Deploy to Int Environment
        run: echo Pre check passed lets deploy to Int  
