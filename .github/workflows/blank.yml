# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ] 
  pull_request:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: write-all    
    outputs:
      continueWorkFlow: ${{ steps.conditionalStep.outputs.continueWorkFlow }}
      blockerDetails: ${{ steps.conditionalStep.outputs.blockerDetails }}
    steps:
    # Steps represent a sequence of tasks that will be executed as part of the job
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      #- name: Dump GitHub context
      #  env:
      #    GITHUB_CONTEXT: ${{ toJSON(github) }}
        #run: echo "$GITHUB_CONTEXT"
      # Call the custom action
      - name: custom action
        id: customAction        
        uses:  madhavirkl84/CustomAction@main
        with: 
          my-token: ${{ secrets.MY_TOKEN }}
          my-token-2: ${{ secrets.GITHUB_TOKEN }}
          pr-status: 'wf1'
      # store pr number for future use 
#      - name: store pr number in env file
#        run: |
#          touch .env
#          echo PR_NUMBER=${{ steps.customAction.outputs.pr-number }} >> .env
      - name: conditional step based on workflow-continue output
        id: conditionalStep
        run: |
          echo "Blockers ${{ steps.customAction.outputs.blockerDetails }}"
          echo "continueWorkFlow=${{ steps.customAction.outputs.workflow-continue }}" >> $GITHUB_OUTPUT
          echo "blockerDetails=${{ steps.customAction.outputs.blockerDetails }}" >> $GITHUB_OUTPUT
          #echo "::set-output name=continueWorkFlow::${{ steps.customAction.outputs.workflow-continue }}"
          #echo "::set-output name=blockerDetails::${{ steps.customAction.outputs.blockerDetails }}"
          # echo "${{ steps.customAction.outputs.workflow-continue }}"
          #echo "Blockers ${{ steps.customAction.outputs.blockerDetails }}"
          # echo $GITHUB_OUTPUT 
          if [[ "${{ steps.customAction.outputs.workflow-continue }}" == "Go" ]]; then
            echo continue the workflow as there are no blockers
          fi
            exit 0
  DeployIntPreCheck:
    name: Deployment Pre Check 
    if: needs.build.outputs.continueWorkFlow == 'noGo'
    #if: github.event_name == 'pull_request'
    needs: [build]
    runs-on: ubuntu-latest
    environment: 
      name: PreDeployCheck
    steps:
      - name: PreCheck
        run: echo Pre check failed, please review to contiue the deploymnet for following blockers 
  DeployToInt:
    name: Int Deployment 
    if: always() && (needs.DeployIntPreCheck.result == 'success' || needs.DeployIntPreCheck.result == 'skipped')
    needs: [DeployIntPreCheck]
    runs-on: ubuntu-latest
    environment: 
      name: Int
      #url: 'http://int.com'
    steps:
      - name: Deploy to Int Environment
        if: ${{ needs.DeployIntPreCheck.result == 'success' || needs.DeployIntPreCheck.result == 'skipped' }}
        run: echo Pre check passed lets deploy to Int     
